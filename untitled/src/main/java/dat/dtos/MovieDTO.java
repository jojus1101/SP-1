package dat.dtos;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import dat.entities.Director;
import dat.entities.Movie;
import lombok.*;

import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

@NoArgsConstructor
@AllArgsConstructor
@Data
@Getter
@Setter
@JsonIgnoreProperties(ignoreUnknown = true)
public class MovieDTO {

    private Long id;
    private String title;
    @JsonProperty("release_date")
    private String releaseDate;  // Ensure this matches the JSON field name

    @JsonProperty("vote_average")
    private Double voteAverage;  // Use Double to handle possible null values

    @JsonProperty("popularity")
    private Double popularity;
    @JsonProperty("original_language")
    private String originalLanguage;

    // List of actors
    private List<ActorDTO> actors;

    // List of directors
    private List<DirectorDTO> directors;

    public MovieDTO(Movie movie ) {
        this.id = movie.getId();
        this.title = movie.getTitle();
        this.releaseDate = movie.getReleaseDate();
        this.voteAverage = movie.getVoteAverage();
        this.popularity = movie.getPopularity();
        this.originalLanguage = movie.getOriginalLanguage();
//        this.actors = movie.getActors().stream()
//                .map(ActorDTO::new)
//                .collect(Collectors.toList());
//        this.directors = movie.getDirectors().stream()
//                .map(DirectorDTO::new)
//                .collect(Collectors.toList());
    }
    // Constructors are generated by Lombok thanks to @Data



}
